// Code generated by candi v1.14.3.

package repository

import (
	"context"

	"PLTD3/internal/modules/distribution/domain"
	shareddomain "PLTD3/pkg/shared/domain"
)

// DistributionRepository abstract interface
type DistributionRepository interface {
	FetchAllByInstansi(ctx context.Context, filter *domain.FilterDistribution) ([]shareddomain.Distribution, error)
	FetchAll(ctx context.Context, filter *domain.FilterDistribution) ([]shareddomain.Distribution, error)
	Count(ctx context.Context, filter *domain.FilterDistribution) int

	SumAllDistribution(ctx context.Context, filter *domain.FilterDistribution) (shareddomain.DistributionSum, error)


	// hapus jika tidak perlu
	Find(ctx context.Context, filter *domain.FilterDistribution) (shareddomain.Distribution, error)
	Save(ctx context.Context, data *shareddomain.Distribution) error
	Delete(ctx context.Context, data *shareddomain.Distribution) (err error)
}
