// Code generated by candi v1.14.3.

package repository

import (
	"context"

	"PLTD3/internal/modules/business/domain"
	shareddomain "PLTD3/pkg/shared/domain"
)

// BusinessRepository abstract interface
type BusinessRepository interface {
	FetchAll(ctx context.Context, filter *domain.FilterBusiness) ([]shareddomain.Business, error)
	FetchConditionUnit(ctx context.Context, filter *domain.FilterBusiness) ([]shareddomain.Business, error)

	// Report
	FetchAllReport(ctx context.Context, filter *domain.FilterBusiness) ([]shareddomain.BusinessReport, error)


	// hapus jika tidak perlu
	Count(ctx context.Context, filter *domain.FilterBusiness) int
	Find(ctx context.Context, filter *domain.FilterBusiness) (shareddomain.Business, error)
	Save(ctx context.Context, data *shareddomain.Business) error
	Delete(ctx context.Context, data *shareddomain.Business) (err error)
}
